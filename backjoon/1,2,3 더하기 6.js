let input = `1
100`.split("\n");

const target = [
  1, 1, 2, 2, 3, 3, 6, 6, 11, 11, 20, 20, 37, 37, 68, 68, 125, 125, 230, 230,
  423, 423, 778, 778, 1431, 1431, 2632, 2632, 4841, 4841, 8904, 8904, 16377,
  16377, 30122, 30122, 55403, 55403, 101902, 101902, 187427, 187427, 344732,
  344732, 634061, 634061, 1166220, 1166220, 2145013, 2145013, 3945294, 3945294,
  7256527, 7256527, 13346834, 13346834, 24548655, 24548655, 45152016, 45152016,
  83047505, 83047505, 152748176, 152748176, 280947697, 280947697, 516743378,
  516743378, 950439251, 950439251, 748130317, 748130317, 215312928, 215312928,
  913882487, 913882487, 877325723, 877325723, 6521120, 6521120, 797729321,
  797729321, 681576155, 681576155, 485826587, 485826587, 965132054, 965132054,
  132534778, 132534778, 583493410, 583493410, 681160233, 681160233, 397188412,
  397188412, 661842046, 661842046, 740190682, 740190682,
];

const solution = () => {
  const n = Number(input.shift());
  input = input.map(Number);

  const maxNum = Math.max(...input);

  const dp = Array.from({ length: maxNum + 1 }, () => 0);
  const acc = Array.from({ length: maxNum + 1 }, () => 0);

  const factor = 1_000_000_009;

  acc[1] = 1; // 1
  acc[2] = 2; // 1 1, 2
  acc[3] = 4; // 1 1 1 , 1 2, 2 1, 3

  for (let i = 4; i <= Math.floor(maxNum / 2); i++) {
    acc[i] =
      (acc[i - 1] % factor) + (acc[i - 2] % factor) + (acc[i - 3] % factor);
  }
  dp[0] = 1;
  dp[1] = 1; // 1
  dp[2] = 2; // 1 1 , 2
  dp[3] = 2; // 1 1 1, 3

  for (let i = 4; i <= maxNum; i++) {
    if (i % 2 === 0) {
      dp[i] = (dp[i] + acc[i / 2]) % factor;
    }
    if (i - 1 > 0 && (i - 1) % 2 === 0) {
      dp[i] = (dp[i] + acc[(i - 1) / 2]) % factor;
    }
    if (i - 2 > 0 && (i - 2) % 2 === 0) {
      dp[i] = (dp[i] + acc[(i - 2) / 2]) % factor;
    }

    if (i - 3 > 0 && (i - 3) % 2 === 0) {
      dp[i] = (dp[i] + acc[(i - 3) / 2]) % factor;
    }
  }
  let result = [];
  for (let i = 0; i < n; i++) {
    result.push(dp[+input[i]]);
  }

  console.log(result.join("\n"));
};

solution();
